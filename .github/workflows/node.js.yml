name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  actions: write
  deployments: write

jobs:
  lint:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4  # Updated to v4
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: "npm"
      - run: npm ci  # Changed from npm install for consistency
      - name: Lint
        run: npm run lint

  build:
    needs: lint  # Build runs after lint passes
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        node-version: [18.x, 20.x]  # Removed 16.x as it's EOL
        os: [ubuntu-latest]  # Simplified to single OS for build
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build and Statically Render
        shell: bash
        run: |
          function retry {
            local n=1
            local max=5
            local delay=1
            while true; do
              "$@" && break || {
                if [[ $n -lt $max ]]; then
                  ((n++))
                  echo "Command failed. Attempt $n/$max:"
                  sleep $delay;
                else
                  echo "The command has failed after $n attempts."
                  return 1
                fi
              }
            done
          }
          retry npm run build
          ls -la build/  # Debug: Check build contents
        env:
          NODE_ENV: production
      
      - name: Upload Pages artifact
        if: matrix.node-version == '20.x'  # Only upload once
        uses: actions/upload-artifact@v4
        with:
          path: 'build'

  deploy:
    needs: build  # Deploy runs after build passes
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v3
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2